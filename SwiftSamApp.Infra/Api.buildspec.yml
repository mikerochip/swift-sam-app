version: 0.2
phases:
  install:
    commands:
      # See https://www.swift.org/install/linux/swiftly/
      - curl -O https://download.swift.org/swiftly/linux/swiftly-1.0.0-$(uname -m).tar.gz
      - tar -zxf swiftly-1.0.0-$(uname -m).tar.gz
      - ./swiftly init --quiet-shell-followup
      - ~/.local/share/swiftly/env.sh
      - hash -r
      - echo $PATH
  pre_build:
    commands:
      - echo "ProjectPath $ProjectPath"
      - echo "ArtifactBucket $ArtifactBucket"
      - echo "ArtifactBucketPrefix $ArtifactBucketPrefix"
      - echo "TemplateFileName $TemplateFileName"
      - echo "OutputTemplateFileName $OutputTemplateFileName"
  build:
    commands:
      - cd $ProjectPath
      - swiftly install --use 5.8.0
      - swift --version
      - swift package --version
      - swift build --product SwiftSamApp -c release
      # see https://github.com/swift-server/swift-aws-lambda-runtime/blob/master/Examples/LambdaFunctions/scripts/package.sh
      - export BuildDir=".build/release/SwiftSamApp"
      - export ZipDir=".build/lambda/SwiftSamApp"
      - mkdir -p "$ZipDir"
      - cp "$BuildDir" "$ZipDir/"
      - ldd "$BuildDir" | grep swift | awk '{print $3}' | xargs cp -Lv -t "$ZipDir"
      - cd "$ZipDir"
      - ln -s "SwiftSamApp" "bootstrap"
      - zip --symlinks lambda.zip *
      - cd ../../..
      - >
        sam package
        --template-file $TemplateFileName
        --output-template-file $OutputTemplateFileName
        --s3-bucket $ArtifactBucket
        --s3-prefix $ArtifactBucketPrefix
        --force-upload
        --debug
artifacts:
  base-directory: $ProjectPath
  files:
    - $OutputTemplateFileName
